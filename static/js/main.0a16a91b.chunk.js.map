{"version":3,"sources":["constants.js","apis/api.js","actions/types.js","components/CameraSelect.jsx","actions/index.js","components/Card.jsx","components/CardList.jsx","components/DatePicker.jsx","components/Scroll.jsx","components/BigImageDialog.jsx","App.jsx","reducers/photosReducer.js","reducers/earthDateReducer.js","reducers/cameraReducer.js","reducers/index.js","index.jsx"],"names":["API_KEY","CURIOSITY_PHOTOS","CAMERA_KEY","CAMERA_TYPES","EARTH_DATE_KEY","PAGE_KEY","DATE_FORMAT","axios","create","baseURL","SET_EARTH_DATE","SET_CAMERA","FETCH_PHOTOS_PENDING","FETCH_PHOTOS_SUCCESS","FETCH_PHOTOS_FAILED","useStyles","makeStyles","formControl","minWidth","marginBottom","CameraSelect","classes","dispatch","useDispatch","React","useState","cameraVal","setCameraVal","open","setOpen","useEffect","type","payload","FormControl","className","InputLabel","id","Select","labelId","onClose","onOpen","value","onChange","event","target","MenuItem","Card","photo","handleClickOpen","onClick","style","width","height","objectFit","cursor","src","img_src","alt","CardList","photos","Grid","container","spacing","justifyContent","map","item","xs","sm","md","lg","DatePicker","moment","subtract","selectedDate","setSelectedDate","date","format","utils","MomentUtils","minDate","maxDate","margin","label","KeyboardButtonProps","Scroll","children","overflowY","border","BigImageDialog","handleClose","Dialog","queryButton","marginTop","App","currentPhoto","setCurrentPhoto","clickedSearch","setClicksearch","useSelector","photosReducer","earthDate","earthDateReducer","camera","cameraReducer","length","alignItems","Button","a","queryByCamera","photosApi","get","response","data","fetchPhotos","variant","initialState","isPending","error","combineReducers","state","action","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","reduxThunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0a16a91b.chunk.js","sourcesContent":["// API Key\r\nexport const API_KEY = \"api_key=SJtLy0wNppl58fwcHcMcFKo9i4tkASgJlgLSmXkJ\";\r\n\r\n// API Path for photos taken by Curiosity\r\nexport const CURIOSITY_PHOTOS = \"/rovers/curiosity/photos?\";\r\n\r\n// API Path for photos taken by Opportunity\r\nexport const OPPORTUNITY_PHOTOS = \"/rovers/opportunity/photos?\";\r\n\r\n// API Path for photos taken by Spirit\r\nexport const SPIRIT_PHOTOS = \"/rovers/spirit/photos?\";\r\n\r\n// Filter photos by Camera\r\nexport const CAMERA_KEY = \"camera=\";\r\n\r\n// Camera Types\r\nexport const CAMERA_TYPES = {\r\n  // Front Hazard Avoidance\r\n  FHAZ: \"FHAZ\",\r\n  // Rear Hazard Avoidance\r\n  RHAZ: \"RHAZ\",\r\n  // Mast\r\n  MAST: \"MAST\",\r\n  // Navigation Cameras\r\n  NAVCAM: \"NAVCAM\",\r\n};\r\n\r\n// Query by Earth Date \"YYYY-MM-DD\"\r\nexport const EARTH_DATE_KEY = \"earth_date=\";\r\n\r\n// Limit query to 25 photos per call with page -- int\r\nexport const PAGE_KEY = \"page=\";\r\n\r\n// earth date format\r\nexport const DATE_FORMAT = \"YYYY-MM-DD\";\r\n","import axios from \"axios\";\r\n\r\nexport default axios.create({\r\n    baseURL: \"https://api.nasa.gov/mars-photos/api/v1/\"\r\n});","export const SET_EARTH_DATE = \"SET_EARTH_DATE\";\r\nexport const SET_CAMERA = \"SET_CAMERA\";\r\nexport const FETCH_PHOTOS_PENDING = \"FETCH_PHOTOS_PENDING\";\r\nexport const FETCH_PHOTOS_SUCCESS = \"FETCH_PHOTOS_SUCCESS\";\r\nexport const FETCH_PHOTOS_FAILED = \"FETCH_PHOTOS_FAILED\";\r\n","import React, { useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport { CAMERA_TYPES } from \"../constants\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setCamera } from \"../actions\";\r\n\r\nconst useStyles = makeStyles({\r\n  formControl: {\r\n    minWidth: 120,\r\n    marginBottom: \"5px\",\r\n  },\r\n});\r\n\r\nconst CameraSelect = () => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const [cameraVal, setCameraVal] = React.useState(\"\");\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleChange = (event) => {\r\n    setCameraVal(event.target.value);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatch(setCamera(cameraVal));\r\n  }, [dispatch, cameraVal]);\r\n\r\n  return (\r\n    <div>\r\n      <FormControl className={classes.formControl}>\r\n        <InputLabel id=\"demo-controlled-open-select-label\">Camera</InputLabel>\r\n        <Select\r\n          labelId=\"demo-controlled-open-select-label\"\r\n          id=\"demo-controlled-open-select\"\r\n          open={open}\r\n          onClose={handleClose}\r\n          onOpen={handleOpen}\r\n          value={cameraVal}\r\n          onChange={handleChange}\r\n        >\r\n          <MenuItem value=\"\">\r\n            <em>None</em>\r\n          </MenuItem>\r\n          <MenuItem value={CAMERA_TYPES.FHAZ}>{CAMERA_TYPES.FHAZ}</MenuItem>\r\n          <MenuItem value={CAMERA_TYPES.RHAZ}>{CAMERA_TYPES.RHAZ}</MenuItem>\r\n          <MenuItem value={CAMERA_TYPES.MAST}>{CAMERA_TYPES.MAST}</MenuItem>\r\n          <MenuItem value={CAMERA_TYPES.NAVCAM}>{CAMERA_TYPES.NAVCAM}</MenuItem>\r\n        </Select>\r\n      </FormControl>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CameraSelect;\r\n","import photosApi from \"../apis/api\";\r\nimport {\r\n  API_KEY,\r\n  CAMERA_KEY,\r\n  CURIOSITY_PHOTOS,\r\n  EARTH_DATE_KEY,\r\n  PAGE_KEY,\r\n} from \"../constants\";\r\nimport {\r\n  SET_EARTH_DATE,\r\n  SET_CAMERA,\r\n  FETCH_PHOTOS_PENDING,\r\n  FETCH_PHOTOS_SUCCESS,\r\n  FETCH_PHOTOS_FAILED,\r\n} from \"./types\";\r\n\r\nexport const setEarthDate = (date) => {\r\n  return {\r\n    type: SET_EARTH_DATE,\r\n    payload: date,\r\n  };\r\n};\r\n\r\nexport const setCamera = (camera) => {\r\n  return {\r\n    type: SET_CAMERA,\r\n    payload: camera,\r\n  };\r\n};\r\n\r\nexport const fetchPhotos =\r\n  (earthDate = \"\", camera) =>\r\n  async (dispatch) => {\r\n    const queryByCamera = `&${CAMERA_KEY}${camera}`;\r\n    dispatch({ type: FETCH_PHOTOS_PENDING });\r\n    try {\r\n      const response = await photosApi.get(\r\n        `${CURIOSITY_PHOTOS}${API_KEY}&${EARTH_DATE_KEY}${earthDate}&${PAGE_KEY}1${\r\n          camera ? queryByCamera : \"\"\r\n        }`\r\n      );\r\n\r\n      dispatch({\r\n        type: FETCH_PHOTOS_SUCCESS,\r\n        payload: response.data.photos,\r\n      });\r\n    } catch (error) {\r\n      dispatch({\r\n        type: FETCH_PHOTOS_FAILED,\r\n        payload: error,\r\n      });\r\n    }\r\n  };\r\n","import React from \"react\";\r\n\r\nconst Card = ({ photo, handleClickOpen }) => {\r\n  return (\r\n    <div className=\"tc dib ma2 grow bw2\">\r\n      <img\r\n        onClick={() => handleClickOpen(photo)}\r\n        style={{\r\n          width: \"400px\",\r\n          height: \"400px\",\r\n          objectFit: \"contain\",\r\n          cursor: \"pointer\",\r\n        }}\r\n        src={photo.img_src}\r\n        alt={photo.img_src}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import { Grid } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport Card from \"./Card\";\r\n\r\nconst CardList = ({ photos, handleClickOpen }) => {\r\n  const renderCards = () => {\r\n    return photos.map((photo) => {\r\n      return (\r\n        <Grid key={photo.id} item xs={12} sm={6} md={4} lg={3}>\r\n          <Card photo={photo} handleClickOpen={handleClickOpen} />\r\n        </Grid>\r\n      );\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Grid container spacing={2} justifyContent=\"center\">\r\n      {renderCards()}\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default CardList;\r\n","import React, { useState } from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport MomentUtils from \"@date-io/moment\";\r\nimport moment from \"moment\";\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardDatePicker,\r\n} from \"@material-ui/pickers\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useEffect } from \"react\";\r\nimport { setEarthDate } from \"../actions\";\r\nimport { DATE_FORMAT } from \"../constants\";\r\n\r\nexport default function DatePicker() {\r\n  const [selectedDate, setSelectedDate] = useState(\r\n    moment().subtract(1, \"days\")\r\n  );\r\n  const dispatch = useDispatch();\r\n\r\n  const handleDateChange = (date) => {\r\n    setSelectedDate(date);\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatch(setEarthDate(moment(selectedDate).format(DATE_FORMAT)));\r\n  }, [dispatch, selectedDate]);\r\n\r\n  return (\r\n    <MuiPickersUtilsProvider utils={MomentUtils}>\r\n      <Grid container justifyContent=\"space-around\">\r\n        <KeyboardDatePicker\r\n          minDate={moment(\"2011-11-26\").format(DATE_FORMAT)}\r\n          maxDate={moment().format(DATE_FORMAT)}\r\n          margin=\"normal\"\r\n          id=\"date-picker-dialog\"\r\n          label=\"Pick a date\"\r\n          format=\"YYYY-MM-DD\"\r\n          value={selectedDate}\r\n          onChange={handleDateChange}\r\n          KeyboardButtonProps={{\r\n            \"aria-label\": \"change date\",\r\n          }}\r\n        />\r\n      </Grid>\r\n    </MuiPickersUtilsProvider>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport '../index.css';\r\n\r\nconst Scroll = ({ children }) => {\r\n\treturn (\r\n\t\t<div id=\"scrollBar\" style={{ overflowY: 'scroll', border: '5px solid black', height: '800px' }}>\r\n\t\t\t{children}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Scroll;","import React from \"react\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\n\r\nconst BigImageDialog = ({ children, handleClose, open }) => {\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        onClose={handleClose}\r\n        aria-labelledby=\"customized-dialog-title\"\r\n        open={open}\r\n      >\r\n        {children}\r\n      </Dialog>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BigImageDialog;\r\n","import { Button, Grid, makeStyles } from \"@material-ui/core\";\r\nimport React, { Fragment, useEffect, useState } from \"react\";\r\nimport CameraSelect from \"./components/CameraSelect\";\r\nimport CardList from \"./components/CardList\";\r\nimport DatePicker from \"./components/DatePicker\";\r\nimport Scroll from \"./components/Scroll\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { fetchPhotos } from \"./actions/index\";\r\nimport \"./App.css\";\r\nimport BigImageDialog from \"./components/BigImageDialog\";\r\n\r\nconst useStyles = makeStyles({\r\n  queryButton: {\r\n    marginTop: \"5px\",\r\n  },\r\n});\r\n\r\nconst App = () => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const [currentPhoto, setCurrentPhoto] = useState(null);\r\n  const [clickedSearch, setClicksearch] = useState(false);\r\n\r\n  const [open, setOpen] = useState(false);\r\n  const handleClickOpen = (photo) => {\r\n    setCurrentPhoto(photo);\r\n    setOpen(true);\r\n  };\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const photos = useSelector(({ photosReducer }) => photosReducer.photos);\r\n  const earthDate = useSelector(\r\n    ({ earthDateReducer }) => earthDateReducer.earthDate\r\n  );\r\n  const camera = useSelector(({ cameraReducer }) => cameraReducer.camera);\r\n\r\n  const handleClick = () => {\r\n    setClicksearch(true);\r\n    fetchPhotos(earthDate, camera)(dispatch);\r\n  };\r\n\r\n  const renderContent = () => {\r\n    if (!photos.length) {\r\n      return clickedSearch ? (\r\n        <h1>\"No available images\" </h1>\r\n      ) : (\r\n        <Fragment>\r\n          <h1>Waiting for you...</h1>\r\n          <p>\r\n            Please select a date to see mars photos taken that very day by NASA\r\n            Rovers. Take it one step further and filter by camera. Have FUN!!\r\n          </p>\r\n        </Fragment>\r\n      );\r\n    }\r\n    return <CardList handleClickOpen={handleClickOpen} photos={photos} />;\r\n  };\r\n\r\n  const renderBigImage = () => {\r\n    return (\r\n      currentPhoto && (\r\n        <img\r\n          style={{\r\n            width: \"600px\",\r\n            height: \"600px\",\r\n            objectFit: \"contain\",\r\n            border: 0,\r\n          }}\r\n          src={currentPhoto.img_src}\r\n          alt={currentPhoto.img_src}\r\n        />\r\n      )\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (photos.length) {\r\n      setClicksearch(false);\r\n    }\r\n  }, [photos]);\r\n\r\n  return (\r\n    <div className=\"tc\">\r\n      <h1 className=\"f1\">EYE SEE MARS</h1>\r\n      <Grid container spacing={2} justifyContent=\"center\" alignItems=\"center\">\r\n        <Grid item lg={2}>\r\n          <DatePicker />\r\n        </Grid>\r\n        <Grid item lg={1}>\r\n          <CameraSelect />\r\n        </Grid>\r\n        <Grid item lg={1}>\r\n          <Button\r\n            onClick={handleClick}\r\n            className={classes.queryButton}\r\n            variant=\"outlined\"\r\n          >\r\n            See Mars\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n      <Scroll>{renderContent()}</Scroll>\r\n      <BigImageDialog handleClose={handleClose} open={open}>\r\n        {renderBigImage()}\r\n      </BigImageDialog>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import {\r\n  FETCH_PHOTOS_SUCCESS,\r\n  FETCH_PHOTOS_PENDING,\r\n  FETCH_PHOTOS_FAILED,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  photos: [],\r\n  isPending: false,\r\n  error: {},\r\n};\r\n\r\nexport const photosReducer = (state = initialState, action = {}) => {\r\n  switch (action.type) {\r\n    case FETCH_PHOTOS_PENDING:\r\n      return { ...state, isPending: true };\r\n    case FETCH_PHOTOS_SUCCESS:\r\n      return { ...state, photos: action.payload, isPending: false };\r\n    case FETCH_PHOTOS_FAILED:\r\n      return { ...state, error: action.payload, isPending: false };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { SET_EARTH_DATE } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  earthDate: \"\",\r\n};\r\n\r\nexport const earthDateReducer = (state = initialState, action = {}) => {\r\n  switch (action.type) {\r\n    case SET_EARTH_DATE:\r\n      return { ...state, earthDate: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { SET_CAMERA } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  camera: \"\",\r\n};\r\n\r\nexport const cameraReducer = (state = initialState, action = {}) => {\r\n  switch (action.type) {\r\n    case SET_CAMERA:\r\n      return { ...state, camera: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport { photosReducer } from \"./photosReducer\";\r\nimport { earthDateReducer } from \"./earthDateReducer\";\r\nimport { cameraReducer } from \"./cameraReducer\";\r\n\r\nexport default combineReducers({\r\n  photosReducer,\r\n  earthDateReducer,\r\n  cameraReducer,\r\n});\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport { createStore, applyMiddleware, compose } from \"redux\";\r\nimport reduxThunk from \"redux-thunk\";\r\nimport \"./index.css\";\r\nimport \"tachyons\";\r\n\r\nimport App from \"./App\";\r\nimport reducers from \"./reducers\";\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(\r\n  reducers,\r\n  {},\r\n  composeEnhancers(applyMiddleware(reduxThunk))\r\n);\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <React.StrictMode>\r\n      <App />\r\n    </React.StrictMode>\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}